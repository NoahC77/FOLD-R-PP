from datasets import *
from timeit import default_timer as timer
from datetime import timedelta


def main():
    # attrs, data, num_idx = acute()
    # attrs, data, num_idx = autism()
    # attrs, data, num_idx = breastw()
    attrs, data, num_idx = cars()
    # attrs, data, num_idx = credit()
    # attrs, data, num_idx = heart()
    # attrs, data, num_idx = kidney()
    # attrs, data, num_idx = krkp()
    # attrs, data, num_idx = mushroom()
    # attrs, data, num_idx = sonar()
    # attrs, data, num_idx = voting()

    # attrs, data, num_idx = ecoli()
    # attrs, data, num_idx = ionosphere()

    # attrs, data, num_idx = adult()
    # attrs, data, num_idx = credit_card()
    # attrs, data, num_idx = titanic_train()

    data_train, data_test = split_set(data, 0.8)
    print('% the answer set program generated by foldr++:\n')

    X_train, Y_train = split_xy(data_train)
    X_pos, X_neg = split_X_by_Y(X_train, Y_train)
    X_test, Y_test = split_xy(data_test)

    start = timer()
    rules1 = foldrpp(X_pos, X_neg, [])
    end1 = timer()

    fr1 = flatten(rules1)
    rule_set = decode_rules(fr1, attrs)
    for r in rule_set:
        print(r)

    end2 = timer()

    print('\n% foldr++ costs: ', timedelta(seconds=end1 - start), ' post:', timedelta(seconds=end2 - end1))
    Y_test_hat = predict(rules1, X_test)
    acc, p, r, f1 = get_scores(Y_test_hat, Y_test)
    print('% acc', round(acc, 4), 'p', round(p, 4), 'r', round(r, 4), 'f1', round(f1, 4), '\n')
    exit()
    data_pred = decode_test_data(data_test, attrs)
    for p in data_pred:
        print(p)


def titanic():
    attrs, data_train, num_idx = titanic_train()
    _, data_test, _ = titanic_test()
    print('% the answer set program generated by foldr++:\n')

    X_train, Y_train = split_xy(data_train)
    X_pos, X_neg = split_X_by_Y(X_train, Y_train)
    X_test, Y_test = split_xy(data_test)

    start = timer()
    rules1 = foldrpp(X_pos, X_neg, [])
    end = timer()

    fr1 = flatten(rules1)
    Y_test_hat = predict(rules1, X_test)
    acc, p, r, f1 = get_scores(Y_test_hat, Y_test)
    rule_set1 = decode_rules(fr1, attrs)
    for rule in rule_set1:
        print(rule)

    print('\n% acc', round(acc, 4), 'p', round(p, 4), 'r', round(r, 4), 'f1', round(f1, 4))
    print('% foldr++ costs: ', timedelta(seconds=end - start), '\n')
    exit()
    data_pred = decode_test_data(data_test, attrs)
    for p in data_pred:
        print(p)


if __name__ == '__main__':
    main()
    # titanic()
